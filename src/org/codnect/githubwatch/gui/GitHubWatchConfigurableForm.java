package org.codnect.githubwatch.gui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import org.codnect.githubwatch.config.PluginConfigData;

import javax.swing.*;
import java.awt.*;

/**
 * Created by Burak KÃ¶ken on 3.5.2019.
 */
public class GitHubWatchConfigurableForm {

    private JPanel rootPanel;
    private JLabel labelGitHubApiKey;
    private JTextField textFieldGitHubApiKey;
    private JLabel labelDescription;

    private PluginConfigData pluginConfigData;

    public GitHubWatchConfigurableForm(PluginConfigData pluginConfigData) {
        this.pluginConfigData = pluginConfigData;
    }

    public JPanel getRootPanel() {
        return rootPanel;
    }

    public void setRootPanel(JPanel rootPanel) {
        this.rootPanel = rootPanel;
    }

    public JLabel getLabelGitHubApiKey() {
        return labelGitHubApiKey;
    }

    public void setLabelGitHubApiKey(JLabel labelGitHubApiKey) {
        this.labelGitHubApiKey = labelGitHubApiKey;
    }

    public JTextField getTextFieldGitHubApiKey() {
        return textFieldGitHubApiKey;
    }

    public void setTextFieldGitHubApiKey(JTextField textFieldGitHubApiKey) {
        this.textFieldGitHubApiKey = textFieldGitHubApiKey;
    }

    public JLabel getLabelDescription() {
        return labelDescription;
    }

    public void setLabelDescription(JLabel labelDescription) {
        this.labelDescription = labelDescription;
    }

    public boolean isModified() {
        String gitHubApiKey = getTextFieldGitHubApiKey().getText();
        if (gitHubApiKey.equals(pluginConfigData.getGitHubApiKey())
                || (gitHubApiKey.isEmpty() && pluginConfigData.getGitHubApiKey() == null)
                ) {
            return false;
        }
        return true;
    }

    public void apply() {
        pluginConfigData.setGitHubApiKey(textFieldGitHubApiKey.getText());
    }

    public void reset() {
        textFieldGitHubApiKey.setText(pluginConfigData.getGitHubApiKey());
    }

    private void createUIComponents() {

    }

    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        rootPanel.setEnabled(false);
        labelGitHubApiKey = new JLabel();
        labelGitHubApiKey.setText("GitHub Api Key :");
        rootPanel.add(labelGitHubApiKey, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        rootPanel.add(spacer1, new GridConstraints(2, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        textFieldGitHubApiKey = new JTextField();
        rootPanel.add(textFieldGitHubApiKey, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        labelDescription = new JLabel();
        labelDescription.setEnabled(true);
        labelDescription.setText("This api key is used to get the your GitHub data by using GitHub API.");
        rootPanel.add(labelDescription, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }
}
